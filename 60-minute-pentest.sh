RUN_DANGEROUS_COMMANDS=false
RUN_LONG_SCANS=true
PATH_TO_CLOUDFOX_LOOT="/tmp/cf-loot"

# Exit if there is no profile env variable
if [ -z "$AWS_PROFILE" ]; then
  echo "AWS_PROFILE is not set"
  exit 1
fi

# Get the account number of the profile we're using
ACCOUNT_NUMBER=$(aws sts get-caller-identity --profile $AWS_PROFILE --no-cli-pager | jq -r '.Account')
ACCOUNT_ARN=$(aws sts get-caller-identity --profile $AWS_PROFILE --no-cli-pager | jq -r '.Arn')
PACU_SESSION_NAME="hacking-in-60-${ACCOUNT_NUMBER}-${AWS_PROFILE}-6"

echo "Kicking off scans on account: $ACCOUNT_NUMBER"

# Prepare Pacu
echo "[+] Establishing session and enumerating privs w/ Pacu"
pacu --new-session $PACU_SESSION_NAME --import-keys $AWS_PROFILE
pacu --exec --module-name iam__enum_permissions --session $AWS_PROFILE
pacu --whoami --session $AWS_PROFILE

# Get the permissions for the profile - wee don't need to actually perform this though.
cloudfox aws --profile $AWS_PROFILE permissions $ACCOUNT_ARN

# Review role-trusts
cloudfox aws role-trusts --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT

cloudfox aws network-ports  --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 
cloudfox aws elastic-network-interfaces --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 
prowler aws --checks ec2_securitygroup_allow_ingress_from_internet_to_any_port

cloudfox aws secrets --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 
cloudfox aws cloudformation --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 

cloudfox aws codebuild --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 
cloudfox aws ecr --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 
cloudfox aws ecs-tasks --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 

cloudfox aws buckets --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 

cloudfox aws lambda --profile $AWS_PROFILE --outdir $PATH_TO_CLOUDFOX_LOOT 

# Find public EBS volumes by owner
prowler -c ec2_ebs_public_snapshot aws ec2 describe-snapshots --restorable-by-user-ids all --owner-ids $ACCOUNT_NUMBER 

echo "[+] Running pmapper to build permissions graph"
pmapper --profile $AWS_PROFILE graph create 
pmapper --account $ACCOUNT_NUMBER visualize --filetype png

# Open that image automatically
echo "[+] Opening permissions graph image"
open ./$ACCOUNT_NUMBER.png

# Find privesc in pmapper
echo "[+] Running pmapper to find privesc"
pmapper --account $ACCOUNT_NUMBER query -s 'preset privesc *'

# Pacu Privesc scan
echo "[+] Running Pacu privesc scan"
pacu --exec --module-name iam__enum_permissions --session $AWS_PROFILE

if [ "$RUN_DANGEROUS_COMMANDS" = true ]; then
    echo "[+] Attempting to escalate privileges with Pacu."
    yes "" | pacu --exec --module-name iam__privesc_scan --session $AWS_PROFILE
fi

if [ "$RUN_LONG_SCANS" = true ]; then
    echo "[+] Installing dependencies for scoutsuite"
    virtualenv -p python3 venv
    source venv/bin/activate
    pip install scoutsuite
    echo "[+] Running scoutsuite"
    scout aws --profile $AWS_PROFILE


    echo "[+] Attempting to install prowler"
    pip3 install prowler
    echo "[+] Running prowler"
    prowler --profile $AWS_PROFILE
fi

echo "[+] Work completed. Opening loot directory"
open "$PATH_TO_CLOUDFOX_LOOT/cloudfox-output/aws/$AWS_PROFILE-$ACCOUNT_NUMBER/loot"
